//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebPortal.SignInService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SignInService.ISignInService")]
    public interface ISignInService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISignInService/login", ReplyAction="http://tempuri.org/ISignInService/loginResponse")]
        bool login(string user, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISignInService/login", ReplyAction="http://tempuri.org/ISignInService/loginResponse")]
        System.Threading.Tasks.Task<bool> loginAsync(string user, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISignInService/sendUserData", ReplyAction="http://tempuri.org/ISignInService/sendUserDataResponse")]
        bool sendUserData(string userData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISignInService/sendUserData", ReplyAction="http://tempuri.org/ISignInService/sendUserDataResponse")]
        System.Threading.Tasks.Task<bool> sendUserDataAsync(string userData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISignInService/getPeers", ReplyAction="http://tempuri.org/ISignInService/getPeersResponse")]
        string[] getPeers(string fileName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISignInService/getPeers", ReplyAction="http://tempuri.org/ISignInService/getPeersResponse")]
        System.Threading.Tasks.Task<string[]> getPeersAsync(string fileName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISignInService/getAllFiles", ReplyAction="http://tempuri.org/ISignInService/getAllFilesResponse")]
        string[] getAllFiles();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISignInService/getAllFiles", ReplyAction="http://tempuri.org/ISignInService/getAllFilesResponse")]
        System.Threading.Tasks.Task<string[]> getAllFilesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISignInService/getNumOfUsers", ReplyAction="http://tempuri.org/ISignInService/getNumOfUsersResponse")]
        int getNumOfUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISignInService/getNumOfUsers", ReplyAction="http://tempuri.org/ISignInService/getNumOfUsersResponse")]
        System.Threading.Tasks.Task<int> getNumOfUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISignInService/getActiveUsers", ReplyAction="http://tempuri.org/ISignInService/getActiveUsersResponse")]
        string getActiveUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISignInService/getActiveUsers", ReplyAction="http://tempuri.org/ISignInService/getActiveUsersResponse")]
        System.Threading.Tasks.Task<string> getActiveUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISignInService/getTotalUsers", ReplyAction="http://tempuri.org/ISignInService/getTotalUsersResponse")]
        string getTotalUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISignInService/getTotalUsers", ReplyAction="http://tempuri.org/ISignInService/getTotalUsersResponse")]
        System.Threading.Tasks.Task<string> getTotalUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISignInService/signOut", ReplyAction="http://tempuri.org/ISignInService/signOutResponse")]
        bool signOut(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISignInService/signOut", ReplyAction="http://tempuri.org/ISignInService/signOutResponse")]
        System.Threading.Tasks.Task<bool> signOutAsync(string userName);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISignInServiceChannel : WebPortal.SignInService.ISignInService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SignInServiceClient : System.ServiceModel.ClientBase<WebPortal.SignInService.ISignInService>, WebPortal.SignInService.ISignInService {
        
        public SignInServiceClient() {
        }
        
        public SignInServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SignInServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SignInServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SignInServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool login(string user, string password) {
            return base.Channel.login(user, password);
        }
        
        public System.Threading.Tasks.Task<bool> loginAsync(string user, string password) {
            return base.Channel.loginAsync(user, password);
        }
        
        public bool sendUserData(string userData) {
            return base.Channel.sendUserData(userData);
        }
        
        public System.Threading.Tasks.Task<bool> sendUserDataAsync(string userData) {
            return base.Channel.sendUserDataAsync(userData);
        }
        
        public string[] getPeers(string fileName) {
            return base.Channel.getPeers(fileName);
        }
        
        public System.Threading.Tasks.Task<string[]> getPeersAsync(string fileName) {
            return base.Channel.getPeersAsync(fileName);
        }
        
        public string[] getAllFiles() {
            return base.Channel.getAllFiles();
        }
        
        public System.Threading.Tasks.Task<string[]> getAllFilesAsync() {
            return base.Channel.getAllFilesAsync();
        }
        
        public int getNumOfUsers() {
            return base.Channel.getNumOfUsers();
        }
        
        public System.Threading.Tasks.Task<int> getNumOfUsersAsync() {
            return base.Channel.getNumOfUsersAsync();
        }
        
        public string getActiveUsers() {
            return base.Channel.getActiveUsers();
        }
        
        public System.Threading.Tasks.Task<string> getActiveUsersAsync() {
            return base.Channel.getActiveUsersAsync();
        }
        
        public string getTotalUsers() {
            return base.Channel.getTotalUsers();
        }
        
        public System.Threading.Tasks.Task<string> getTotalUsersAsync() {
            return base.Channel.getTotalUsersAsync();
        }
        
        public bool signOut(string userName) {
            return base.Channel.signOut(userName);
        }
        
        public System.Threading.Tasks.Task<bool> signOutAsync(string userName) {
            return base.Channel.signOutAsync(userName);
        }
    }
}
